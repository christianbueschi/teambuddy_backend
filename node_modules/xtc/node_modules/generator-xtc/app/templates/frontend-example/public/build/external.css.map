{"version":3,"sources":["/Users/marc/projects/xtc/node_modules/generator-xtc/app/templates/frontend-example/base/css/sprites/sprites-helper.less","/Users/marc/projects/xtc/node_modules/generator-xtc/app/templates/frontend-example/base/css/sprites/sprites.less","/Users/marc/projects/xtc/node_modules/generator-xtc/app/templates/frontend-example/base/css/lib/helpers.less","/Users/marc/projects/xtc/node_modules/generator-xtc/app/templates/frontend-example/base/css/lib/wireframe.less","/Users/marc/projects/xtc/node_modules/generator-xtc/app/templates/frontend-example/base/css/90-styles.less","/Users/marc/projects/xtc/node_modules/generator-xtc/app/templates/frontend-example/base/css/lib/xtc.less","/Users/marc/projects/xtc/node_modules/generator-xtc/app/templates/frontend-example/base/css/10-webfonts.less","/Users/marc/projects/xtc/node_modules/generator-xtc/app/templates/frontend-example/base/css/40-layouts.less","/Users/marc/projects/xtc/node_modules/generator-xtc/app/templates/frontend-example/base/css/lib/spartan.less","/Users/marc/projects/xtc/node_modules/generator-xtc/app/templates/frontend-example/base/css/60-setup.less","/Users/marc/projects/xtc/node_modules/generator-xtc/app/templates/frontend-example/base/css/20-typography.less","/Users/marc/projects/xtc/node_modules/generator-xtc/app/templates/frontend-example/base/css/00-variables.less","/Users/marc/projects/xtc/node_modules/generator-xtc/app/templates/frontend-example/modules/example/example.less","/Users/marc/projects/xtc/node_modules/generator-xtc/app/templates/frontend-example/modules/example/skins/example-alternate.less"],"names":[],"mappings":"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","sourcesContent":["[class^=s-], [class*=' s-'] {\n\tdisplay: inline-block;\n}\n\n.sprite() {\n\tcontent: '';\n\tdisplay: inline-block;\n}","/* glue: 0.9.4 hash: acd16f4e46 */\n.s-icon-paperclip,.s-icon-alarm,.s-icon-lightbulb{\n    background-image:url('/build/sprites.png');\n    background-repeat:no-repeat;\n    -webkit-background-size: 32px 38px;\n    -moz-background-size: 32px 38px;\n    background-size: 32px 38px;\n    \n    @media screen and (-webkit-min-device-pixel-ratio: 1.0), screen and (min--moz-device-pixel-ratio: 1.0),screen and (-o-min-device-pixel-ratio: 100/100),screen and (min-device-pixel-ratio: 1.0),screen and (min-resolution: 1.0dppx){\n        background-image:url('/build/sprites.png');\n    }\n    \n    @media screen and (-webkit-min-device-pixel-ratio: 2.0), screen and (min--moz-device-pixel-ratio: 2.0),screen and (-o-min-device-pixel-ratio: 200/100),screen and (min-device-pixel-ratio: 2.0),screen and (min-resolution: 2.0dppx){\n        background-image:url('/build/sprites@2x.png');\n    }\n    \n}\n\n.s-icon-paperclip{\n    background-position:0 0;\n    width:20px;\n    height:19px;\n}\n\n.s-icon-alarm{\n    background-position:0 -19px;\n    width:20px;\n    height:20px;\n}\n\n.s-icon-lightbulb{\n    background-position:-20px 0;\n    width:12px;\n    height:19px;\n}\n","/**\n * \"such.less\" CSS boilerplate framework\n * helpers.less\n * https://github.com/MarcDiethelm/such.less\n * License: MIT\n * Copyright 2014 Marc Diethelm\n */\n\n// CSS3 BROWSER PREFIXES\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n.box-sizing(@boundaries: border-box) {\n\t-webkit-box-sizing: @boundaries;\n\t-moz-box-sizing: @boundaries;\n\tbox-sizing: @boundaries;\n}\n\n.transform(...) {\n\t-webkit-transform: @arguments;\n\t-moz-transform: @arguments;\n\t-ms-transform: @arguments;\n\t-o-transform: @arguments;\n\ttransform: @arguments;\n\tzoom: 1;\n}\n\n.transition(...) {\n\t-webkit-transition: @arguments;\n\t-moz-transition: @arguments;\n\t-o-transition: @arguments;\n\ttransition: @arguments;\n}\n\n// take every amount of arguments and use them as-is to make shorthands possible\n.border-radius(...) {\n\t-webkit-border-radius: @arguments;\n\t-moz-border-radius: @arguments;\n\tborder-radius: @arguments;\n}\n\n// messy placeholder color mixin because placeholder selectors can't be chained\n.placeholder-color(@color: inherit) {\n\t::-webkit-input-placeholder {\n\t\t// WebKit browsers\n\t\tcolor: @color;\n\t}\n\t:-moz-placeholder {\n\t\t// Mozilla Firefox 4 to 18\n\t\tcolor: @color;\n\t}\n\t::-moz-placeholder {\n\t\t// Mozilla Firefox 19+\n\t\tcolor: @color;\n\t}\n\t:-ms-input-placeholder {\n\t\t// Internet Explorer 10+\n\t\tcolor: @color;\n\t}\n}\n\n// GRADIENTS\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n.linear-gradient('vertical', @colorStart: #eee, @colorEnd: #ccc, @start: 0%, @end: 100%) {\n\tbackground: mix(@colorStart, @colorEnd); /* Old browsers */\n\tbackground: -moz-linear-gradient(top, @colorStart @start, @colorEnd @end); /* FF3.6+ */\n\tbackground: -webkit-gradient(linear, left top, left bottom, color-stop(@start, @colorStart), color-stop(@end, @colorEnd)); /* Chrome,Safari4+ */\n\tbackground: -webkit-linear-gradient(top, @colorStart @start, @colorEnd @end); /* Chrome10+,Safari5.1+ */\n\tbackground: -o-linear-gradient(top, @colorStart @start, @colorEnd @end); /* Opera 11.10+ */\n\tbackground: -ms-linear-gradient(top, @colorStart @start, @colorEnd @end); /* IE10+ */\n\tbackground: linear-gradient(to bottom, @colorStart @start, @colorEnd @end); /* W3C */\n\tfilter: progid:DXImageTransform.Microsoft.gradient(startColorstr='@{colorStart}', endColorstr='@{colorEnd}', GradientType=0); /* IE6-9 */\n}\n\n.linear-gradient('horizontal', @colorStart: #eee, @colorEnd: #ccc, @start: 0%, @end: 100%) {\n\tbackground: mix(@colorStart, @colorEnd); /* Old browsers */\n\tbackground: -moz-linear-gradient(left, @colorStart @start, @colorEnd @end); /* FF3.6+ */\n\tbackground: -webkit-gradient(linear, left top, right top, color-stop(@start, @colorStart), color-stop(@end, @colorEnd)); /* Chrome,Safari4+ */\n\tbackground: -webkit-linear-gradient(left, @colorStart @start, @colorEnd @end); /* Chrome10+,Safari5.1+ */\n\tbackground: -o-linear-gradient(left, @colorStart @start, @colorEnd @end); /* Opera 11.10+ */\n\tbackground: -ms-linear-gradient(left, @colorStart @start, @colorEnd @end); /* IE10+ */\n\tbackground: linear-gradient(to right, @colorStart @start, @colorEnd @end); /* W3C */\n\tfilter: progid:DXImageTransform.Microsoft.gradient(startColorstr='@{colorStart}', endColorstr='@{colorEnd}', GradientType=1); /* IE6-9 */\n}\n\n// BOX SHADOW\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n.box-shadow(@x: 0, @y: 0, @blur: 5px, @spread: 0, @color: #ccc) {\n\t-webkit-box-shadow: @arguments;\n\t-moz-box-shadow: @arguments;\n\tbox-shadow: @arguments;\n}\n\n.box-shadow(inset, @x: 0, @y: 0, @blur: 5px, @spread: 0, @color: #ccc) {\n\t// cannot use @arguments here!\n\t-webkit-box-shadow: inset @x @y @blur @spread @color;\n\t-moz-box-shadow: inset @x @y @blur @spread @color;\n\tbox-shadow: inset @x @y @blur @spread @color;\n}\n\n.box-shadow(none) {\n\t-webkit-box-shadow: none;\n\t-moz-box-shadow: none;\n\tbox-shadow: none;\n}\n\n// STYLE HELPERS\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// extend a background horizontally to \"infinity and beyond\" without altering the elements content boundaries\n.bg-beyond(@width: 500%) {\n\tmargin-left: -@width;\n\tmargin-right: -@width;\n\tpadding-left: @width;\n\tpadding-right: @width;\n\t// bg-beyond with .clearfixed rows pushes content down. fix with...\n\t// clear: both; // or\n\t// overflow: hidden;\n}\n\n// convert hex code to RGBA background color with pure color fallback\n.rgba-bg(@color, @transparency) {\n\t@rgba: fade(@color, @transparency);\n\t\n\tbackground: @color;\n\tbackground: @rgba;\n}\n\n/**\n * CSS pseudo element triangle helper\n *\n * params .triangle(1, 2, 3, 4):\n * 1. Direction in which the triangle peak should face.\n * 2. Thickness of the triangle (e.g. half a diagonal line if you make a square out of two triangles).\n * 3. Triangle color, can be inherited from parent (default).\n * 4. Optional parameter to center the triangle on the given side relative to its parent.\n *    This needs the parent to have position: relative.\n *\n * usage example:\n *\n * .my-element {\n *      position: relative;\n *\n *      &:after {\n *          .triangle('down', 10px, red, 'centered');\n *      }\n * }\n **/\n\n.triangle(@_, @size, @color: inherit, ...) {\n\tcontent: ' ';\n\tdisplay: inline-block;\n\twidth: 0px;\n\theight: 0px;\n\tborder: @size solid transparent;\n}\n\n.triangle(@_, @size, @color, 'centered') {\n\tposition: absolute;\n}\n\n.triangle('up', @size, @color, ...) {\n\tborder-bottom-color: @color;\n\tborder-top: none;\n}\n\n.triangle('up', @size, @color, 'centered') {\n\ttop: -@size;\n\tleft: 50%;\n\tmargin-left: -@size;\n}\n\n.triangle('right', @size, @color, ...) {\n\tborder-left-color: @color;\n\tborder-right: none;\n}\n\n.triangle('right', @size, @color, 'centered') {\n\ttop: 50%;\n\tright: -@size;\n\tmargin-top: -@size;\n}\n\n.triangle('down', @size, @color, ...) {\n\tborder-top-color: @color;\n\tborder-bottom: none;\n}\n\n.triangle('down', @size, @color, 'centered') {\n\tbottom: -@size;\n\tleft: 50%;\n\tmargin-left: -@size;\n}\n\n.triangle('left', @size, @color, ...) {\n\tborder-right-color: @color;\n\tborder-left: none;\n}\n\n.triangle('left', @size, @color, 'centered') {\n\ttop: 50%;\n\tleft: -@size;\n\tmargin-top: -@size;\n}\n\n// POLYFILLS\n////////////////////////////////////\n\n// http://www.whatwg.org/specs/web-apps/current-work/multipage/editing.html#the-hidden-attribute\n[hidden] {\n\tdisplay: none;\n}\n\n// CLASSES\n////////////////////////////////////\n\n/*\n * Hide only visually, but have it available for screenreaders: h5bp.com/v\n */\n.vis-hidden {\n\tborder: 0;\n\tclip: rect(0 0 0 0);\n\theight: 1px;\n\tmargin: -1px;\n\toverflow: hidden;\n\tpadding: 0;\n\tposition: absolute;\n\twidth: 1px;\n\n/*\n * Extends the .vis-hidden class to allow the element to be focusable\n * when navigated to via the keyboard: h5bp.com/p\n */\n\t&.focusable:active,\n\t&.focusable:focus {\n\t\tclip: auto;\n\t\theight: auto;\n\t\tmargin: 0;\n\t\toverflow: visible;\n\t\tposition: static;\n\t\twidth: auto;\n\t}\n}\n\n.text-hide {\n\tfont: ~\"0/0\" a;\n\tcolor: transparent;\n\ttext-shadow: none;\n\tbackground-color: transparent;\n\tborder: 0;\n\ttext-rendering: auto; // prevent webkit ghost text if text rendering is set to optimizeLegibility\n}\n\n/*\n * Hide from both screenreaders and browsers: h5bp.com/u\n */\n.hidden {\n\tdisplay: none !important;\n\tvisibility: hidden;\n}\n\n// scale blocks in fluid layouts\n.flex, // e.g. <img class=\"flex\n.flex img {\n\tmax-width: 100%;\n\twidth: auto; //fix for ie\n\theight: auto;\n\timage-rendering: optimizeQuality;\n\t-ms-interpolation-mode: bicubic; // ie8-\n}\n\n// links around blocks\na.img,\na.box {\n\tdisplay: inline-block;\n\ttext-decoration: none;\n\tcursor: pointer; // IE 7\n\tline-height: 0; // prevents space at bottom\n}\n\n// … (shorten single-line text with three dots to fit parent)\n.ellipsis {\n\twhite-space: nowrap;\n\toverflow: hidden;\n\t-ms-text-overflow: ellipsis;\n\t-o-text-overflow: ellipsis;\n\ttext-overflow: ellipsis;\n}\n\n/*\n * Clearfix: contain floats\n */\n.cf { // For modern browsers\n\t&:before, &:after {\n\t\tcontent: \" \"; // The space content is one way to avoid an Opera bug when the contenteditable` attribute is included anywhere else in the document. Otherwise it causes space to appear at the top and bottom of elements that receive the `clearfix` class.\n\t\tdisplay: table; //  The use of `table` rather than `block` is only necessary if using `:before` to contain the top-margins of child elements.\n\t}\n\t&:after {\n\t\tclear: both;\n\t}\n// For IE 6/7 only\n\t*zoom: 1; // trigger hasLayout and contain floats.\n}","/*\n * For early scaffolding to let us know which viewport we're in.\n */\n.visual-viewports() {\n\t&:before,\n\t&:after {\n\t\tposition: fixed;\n\t\tpadding: 5px;\n\t\topacity: .5;\n\t\tfont-weight: normal;\n\t\tfont-size: x-large;\n\t\tright: 15px;\n\t\tz-index: 999;\n\t\tpointer-events: none;\n\t}\n\n\t// Todo: can we generate this with less?\n\t&:before {\n\t\ttop: 45px;\n\t\tbackground-color: hotpink;\n\t\tborder: 1px solid mediumvioletred;\n\t}\n\n\t&:after {\n\t\ttop: 80px;\n\t\tbackground-color: turquoise;\n\t\tborder: 1px solid teal;\n\t}\n\n\t@media @m-small {\n\t\t&:before {\n\t\t\tcontent: 'small';\n\t\t}\n\t}\n\n\t@media @m-medium-up {\n\t\t&:before {\n\t\t\tcontent: 'medium';\n\t\t}\n\t}\n\n\t@media @m-large {\n\t\t&:before {\n\t\t\tcontent: 'large';\n\t\t}\n\t}\n\n\t@media @co-1-col {\n\t\t&:after {\n\t\t\tcontent: '1 col';\n\t\t}\n\t}\n\n\t@media @co-2-col {\n\t\t&:after {\n\t\t\tcontent: '2 cols';\n\t\t}\n\t}\n\n\t@media @co-3-col {\n\t\t&:after {\n\t\t\tcontent: '3 cols';\n\t\t}\n\t}\n}\n\n/* WIREFRAME STYLES */\n\n.wf-box-sizing() {\n\t-moz-box-sizing: border-box;\n -webkit-box-sizing: border-box;\n     -ms-box-sizing: border-box;\n         box-sizing: border-box;\n}\n\n.wf-row {\n\t.wf-box-sizing();\n\tmargin-bottom: 25px;\n}\n.wf-box {\n\t.wf-box-sizing();\n\tdisplay: block;\n\toutline: 1px dashed #999;\n\tbackground-color: #eaeaea;\n\tmargin-bottom: 3px;\n\tpadding: .5rem;\n\t\n\t.wf-box {\n\t\tbackground-color: #f8f8f8;\n\t\toutline: 1px dotted #fff;\n\t}\n}\n.wf-box-dark:extend(.wf-box) {\n\tbackground-color: #444;\n\t\n\t.wf-box-dark {\n\t\tbackground-color: #555;\n\t}\n}\n.wf-text {\n/*\tcolor: #ddd;\n\tletter-spacing: -.13em;\n\tword-spacing: -.2em;*/\n}\n.wf-label {\n\tpadding: 0 2px 2px;\n\tfont-weight: 200;\n\tfont-size: 20px;\n\tline-height: 30px;\n\tfont-family: \"Helvetica Neue\", \"Open Sans Light\", Helvetica, sans-serif;\n\tcolor: #777;\n\tbackground-color: #eeeeff;\n\t\n\t&:before,\n\t&:after {\n\t\tcontent: '';\n\t\tvertical-align: -.5rem;\n\t}\n}","\n// DEMO STUFF\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// Dependencies:\n// - 00-variables.less\n\n// grid demo\n.demo-grid {\n\t.title {\n\t\tmargin-top: 2em;\n\t\tpadding-top: .5em;\n\t\tdisplay: block;\n\t\tborder-top: 1px solid lighten(@color-copy, 50%);\n\t}\n\n\tth {\n\t\ttext-align: left;\n\t\tpadding-right: 3.5em;\n\t\tvertical-align: top;\n\t}\n\tth, td {\n\t\tpadding-top: .175em;\n\t\tpadding-bottom: .175em;\n\t\tborder-bottom: 1px dotted lighten(@color-copy, 40%);\n\t}\n\ttd {\n\t\tfont-weight: bold;\n\t}\n\tth, ._reset {\n\t\tfont-weight: normal;\n\t}\n\t.g-col {\n\t\tmargin-bottom: 1em;\n\t\t\n\t\t> span:extend(.wf-box) {\n\t\t\tdisplay: block;\n\t\t\toverflow: hidden;\n\t\t}\n\t}\n\t._type:after {\n\t\tcontent: '@{grid-type}';\n\t}\n\t._max-width:after {\n\t\tcontent: '@{max-content-width}';\n\t}\n\t._gutter-width:after {\n\t\tcontent: '@{grid-gutter}';\n\t}\n\t._gutter-type:after {\n\t\tcontent: '@{gutter-type}';\n\t}\n\t._gutter-width-percent:after {\n\t\t@grid-gutter-width-percent: round(percentage(@grid-gutter / (@max-content-width + @grid-gutter)), @spartan-grid-precision);\n\t\tcontent: '@{grid-gutter-width-percent}';\n\t}\n\thr {\n\t\tborder: none;\n\t\tborder-bottom: 1px solid lighten(@color-copy, 50%);\n\t}\n}",".xtc-error {\n\toutline: 1px solid #ff0000 !important;\n}","// font-face inclusion as with http://www.fontsquirrel.com/tools/webfont-generator\n// dummy parameter for every source because of an occasional firefox bug\n@font-face {\n\tfont-family: 'Open Sans Light';\n\tsrc: url('@{path-fonts}/OpenSans-Light-webfont.eot?wow');                                   /* IE9 Compat Modes */\n\tsrc: url('@{path-fonts}/OpenSans-Light-webfont.eot?wow#iefix') format('embedded-opentype'), /* IE6-IE8 */\n\t     url('@{path-fonts}/OpenSans-Light-webfont.woff?wow') format('woff'),                   /* Modern Browsers */\n\t     url('@{path-fonts}/OpenSans-Light-webfont.ttf?wow') format('truetype'),                /* Safari, Android, iOS */\n\t     url('@{path-fonts}/OpenSans-Light-webfont.svg?wow#open_sanslight') format('svg');      /* Legacy iOS */\n\t// In-depth information how to set the following font definitions:\n\t// http://www.smashingmagazine.com/2013/02/14/setting-weights-and-styles-at-font-face-declaration/\n\tfont-weight: normal;\n\tfont-style: normal;\n}\n","// Dependencies:\n// - 00-variables.les\n// - lib/spartan.less\n\n// BASE LAYOUT\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n#layout {\n\t// fallback values if mixins get called without params\n\t@min-width-default: 0;\n\t@max-width-default: @max-content-width;\n\n\t.content-boundaries(@min-width: @min-width-default, @max-width: @max-width-default) {\n\t\tmin-width: @min-width;\n\t\tmax-width: @max-width;\n\t}\n\n\t.center() {\n\t\tdisplay: block;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t}\n}\n\n// RESPONSIVE LAYOUTS\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n * You can use the following mixins to easily set up responsive layouts.\n * For grid layouts with non-equal span sizes use incrementing col-[integer] classes and apply sizes to each of these classes:\n *\n * .grid-col-set([column name], [column span width]):\n * Standard mixin to set up a column in a responsive layout\n *\n * To set up layouts with equal width columns you only specify the width in `.grid-col-set-equal`.\n *\n * .grid-col-set-equal([column span width]):\n * Extended mixin to set up equal width columns and properly clear them at the same time\n *\n * Note: Every use of .grid-col-set-equal() must be wrapped in a media query (even for smallest \"mobile first\" viewport).\n *       Because else the `nth-child` selectors used in ` .grid-col-set-equal()` for proper clearing would be passed on to all\n *       other viewports/media queries in the layout.\n *\n * .grid-col-clear([columns per line]):\n * Use this to manually clear every nth column if columns differ in height.\n * This ensures that a grid layout can have only [columns per line] columns on one horizontal grid line.\n *\n **/\n\n// layouts //\n\n.layout-r-1 {\n\t/**\n\t* specs: max cols 12\n\t* desktop: 4\n\t* tablet: 6\n\t* phone: 12\n\t**/\n\n\t@media  @m-small {\n\t\t.grid-col-set-equal(12);\n\t}\n\n\t@media @m-medium {\n\t\t.grid-col-set-equal(6);\n\t}\n\n\t@media @m-large {\n\t\t.grid-col-set-equal(4);\n\t}\n}\n\n.layout-r-2 {\n\t/**\n\t* specs: max cols 12\n\t* desktop: 6\n\t* tablet: 12\n\t* phone: 12\n\t**/\n\n\t@media @m-medium-down {\n\t\t.grid-col-set-equal(12);\n\t}\n\n\t@media @m-large {\n\t\t.grid-col-set-equal(6);\n\t}\n}\n\n.layout-r-3 {\n\t/**\n\t* specs:\n\t* desktop: 8/4\n\t* tablet: 8/4\n\t* phone: 12\n\t**/\n\n\t@media @m-small {\n\t\t.grid-col-set-equal(12);\n\t}\n\n\t@media @m-medium-up {\n\t\t.grid-col-set(col-1, 8);\n\t\t.grid-col-set(col-2, 4);\n\t}\n}\n\n.layout-r-4 {\n\t/**\n\t* specs:\n\t* desktop: 3\n\t* tablet: 6\n\t* phone: 12\n\t**/\n\n\t@media @m-small {\n\t\t.grid-col-set-equal(12);\n\t}\n\n\t@media @m-medium {\n\t\t.grid-col-set-equal(6);\n\t}\n\n\t@media @m-large {\n\t\t.grid-col-set-equal(3);\n\t}\n}\n\n.layout-nogrid-1 {\n\t/**\n\t* specs:\n\t* desktop: 7\n\t* tablet: 5\n\t* phone: 5\n\t**/\n\n\t@media @m-medium-down {\n\t\t.grid-col-set(col, @grid-cols / 5);\n\t}\n\n\t@media @m-large {\n\t\t.grid-col-set(col, @grid-cols / 7);\n\t}\n}","// GRID CALCULATIONS\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// Note: We use !important statements for grid layout critical styles.\n//       Like this you can define for example margin shorthands on a columns without affecting the grid indentation.\n\n.spartan-grid() {\n\t// multiple mixins switch according to passed types\n\n\t// mixin for standard fluid grid with fluid gutter\n\t.spartan-create('fluid', 'fluid', @fixed-width, @fixed-gutter, @cols) {\n\t\t@spartan-width: 100%;\n\n\t\t// fluid gutter is calculated relatively to the static gutter in fixed grid width\n\t\t@spartan-row-gutter: round(percentage(@fixed-gutter / @fixed-width), @spartan-grid-precision);\n\t\t// percentage column gutter has to be slightly bigger than row indent because row indent changes the container width\n\t\t@spartan-col-gutter: round(percentage(@fixed-gutter / (@fixed-width + @fixed-gutter)), @spartan-grid-precision);\n\n\t\t// calculate the width of one grid column\n\t\t@spartan-one-col: (@spartan-width / @cols);\n\n\t\t// implement grid mixins with type dependent variables\n\t\t.spartan-grid > .spartan-grid-mixins(@spartan-width, @spartan-row-gutter, @spartan-col-gutter, @spartan-one-col);\n\t}\n\n\t// mixin for fluid grid and fixed gutter\n\t.spartan-create('fluid', 'fixed', @fixed-width, @fixed-gutter, @cols) {\n\t\t@spartan-width: 100%;\n\n\t\t// calculate the width of one grid column\n\t\t@spartan-one-col: (@spartan-width / @cols);\n\n\t\t// implement grid mixins with type dependent variables\n\t\t.spartan-grid > .spartan-grid-mixins(@spartan-width, @fixed-gutter, @fixed-gutter, @spartan-one-col);\n\t}\n\n\t// only one mixin for fixed grid needed because we cannot make fluid gutters in static grid\n\t.spartan-create('fixed', @gutter-type, @fixed-width, @fixed-gutter, @cols) {\n\t\t// calculate the width of one grid column\n\t\t@spartan-one-col: ((@fixed-width + @fixed-gutter) / @cols);\n\n\t\t// implement grid mixins with type dependent variables\n\t\t.spartan-grid > .spartan-grid-mixins(@fixed-width, @fixed-gutter, @fixed-gutter, @spartan-one-col);\n\t}\n\n\t// call switch mixin to calculate variables depending on grid configuration\n\t.spartan-grid > .spartan-create(@spartan-grid-type, @spartan-grid-gutter-type, @spartan-grid-fixed-width, @spartan-grid-fixed-gutter, @spartan-grid-max-cols);\n\n\t// unlock grid mixins with modified variables\n\t.spartan-grid-mixins(@width, @row-gutter, @col-gutter, @one-col) {\n\t\t.spartan-span-width(@num) {\n\t\t\twidth: round((@one-col * @num), @spartan-grid-precision);\n\t\t}\n\n\t\t// indent grid columns either way with these mixins\n\t\t.spartan-indent(@num: 0) when (@num >= 0) {\n\t\t\tmargin-left: round((@one-col * @num), @spartan-grid-precision);\n\t\t}\n\n\t\t.spartan-indent(@num: 0) when (@num < 0) {\n\t\t\tmargin-left: -round((@one-col * @num), @spartan-grid-precision);\n\t\t}\n\n\t\t// used only on .col for uniquely applied gutter\n\t\t.spartan-col-indent(@num: 0) {\n\t\t\tpadding-left: @col-gutter !important;\n\t\t}\n\n\t\t// used only on .row for proper negative indents\n\t\t.spartan-row-indent(@num: 0) {\n\t\t\tmargin-left: -@col-gutter;\n\t\t}\n\n\t\t// visually manipulate grid column order with these mixins\n\t\t.spartan-push(@num) {\n\t\t\tleft: round((@one-col * @num), @spartan-grid-precision);\n\t\t}\n\n\t\t.spartan-pull(@num) {\n\t\t\tright: round((@one-col * @num), @spartan-grid-precision);\n\t\t}\n\t}\n\n\t// less loop to generate grid classes\n\t.spartan-loop (@index, @class: item, @mixin: '') when (@index > 0) {\n\t\t// create the actual css selector\n\t\t.@{class}-@{index} {\n\t\t\t.spartan-grid > .spartan-apply(@mixin, @index);\n\t\t}\n\n\t\t// next iteration\n\t\t.spartan-grid > .spartan-loop(@index - 1, @class, @mixin);\n\t}\n\n\t// GRID CLASS GENERATOR\n\t////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\t// mixins to call inside less loop\n\t// use standardized global mixins - because we have them...\n\n\t.spartan-apply('grid-span', @index) {\n\t\t.grid-span(@index);\n\t}\n\n\t.spartan-apply('grid-offset', @index) {\n\t\t.grid-offset(@index);\n\t}\n\n\t.spartan-apply('grid-push', @index) {\n\t\t.grid-push(@index);\n\t}\n\n\t.spartan-apply('grid-pull', @index) {\n\t\t.grid-pull(@index);\n\t}\n}\n\n// GLOBAL MIXINS\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// provide standardized, prefixed mixins\n// values will depend on grid type\n// (either percentage or pixel)\n\n.grid-span(@num: 0) when (@num >= 0) {\n\t.spartan-span-width(@num);\n}\n\n.grid-offset(@num: 0) {\n\t// use important statement to overwrite default row margin applied with shorthands\n\t.spartan-indent(@num) !important;\n}\n\n.grid-push(@num: 0) when (@num >= 0) {\n\t.spartan-push(@num);\n}\n\n.grid-pull(@num: 0) when (@num >= 0) {\n\t.spartan-pull(@num);\n}\n\n// LAYOUT SETUP HELPERS\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// You can use the following mixins to easily set up responsive layouts.\n// For grid layouts with non-equal span sizes use incrementing col-[integer] classes and apply sizes to each of these classes.\n//\n// .col-set([colum name], [column span width], [offset]):\n// Standard mixin to set up a column in a responsive layout.\n//\n// To set up layouts with equal width columns you only specify the width in `.col-set-equal`.\n//\n// .col-set-equal([column span width]):\n// Extended mixin to set up equal width columns and properly clear them at the same time\n//\n// Note: Every use of .col-set-equal() must be wrapped in a media query (even for smallest \"mobile first\" viewport).\n//       Because else the `nth-child` selectors used in ` .col-set-equal()` for proper clearing would be passed on to all\n//       other viewports/media queries in the layout.\n//\n// .col-clear([colums per line]):\n// Use this to manually clear every nth column if columns differ in height.\n// This ensures that a grid layout can have only [colums per line] columns on one horizontal grid line.\n\n.grid-col-clear(@columns) when (isnumber(@columns)) {\n\t> .@{spartan-namespace}row > .@{spartan-namespace}col:nth-child(@{columns}n+1),\n\t> .@{spartan-namespace}col:nth-child(@{columns}n+1) {\n\t\tclear: left;\n\t}\n}\n\n.grid-col-set(@col-name; @col-span) {\n\t// apply styles to child columns directly or to columns within child rows\n\t> .@{spartan-namespace}row > .@{spartan-namespace}@{col-name},\n\t> .@{spartan-namespace}@{col-name} {\n\t\t.grid-span(@col-span);\n\t}\n}\n\n.grid-col-set(@col-name; @col-span; @offset) {\n\t// apply styles to child columns directly or to columns within child rows\n\t> .@{spartan-namespace}row > .@{spartan-namespace}@{col-name},\n\t> .@{spartan-namespace}@{col-name} {\n\t\t.grid-span(@col-span);\n\t\t.grid-offset(@offset);\n\t}\n}\n\n.grid-col-set-equal(@col-span) when (isnumber(@col-span)) {\n\t@spartan-clear: @spartan-grid-max-cols / @col-span;\n\n\t// use default col-set mixin to generate selector\n\t.grid-col-set(col; @col-span);\n\n\t// with equal columns, clear every nth element for proper alignment\n\t.grid-col-clear(@spartan-clear);\n}\n\n// GRID CREATION API\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// generate base grid classes valid for every setup\n.grid-core(@prefix: g-) {\n\t@spartan-namespace: @prefix;\n\t\n\t// prefixed clearfix mixin from h5bp for grid only\n\t.grid-cf() {\n\t\t&:before,\n\t\t&:after {\n\t\t\tcontent: \" \";\n\t\t\tdisplay: table;\n\t\t}\n\n\t\t&:after {\n\t\t\tclear: both;\n\t\t}\n\t}\n\n\t// prefixed twitter bootstrap box sizing mixin\n\t.grid-box-sizing(@boxmodel: border-box) {\n\t\t-webkit-box-sizing: @boxmodel;\n\t\t-moz-box-sizing: @boxmodel;\n\t\tbox-sizing: @boxmodel;\n\t}\n\n\t.grid-row-reorder() {\n\t\t> .@{spartan-namespace}col {\n\t\t\tposition: relative;\n\t\t}\n\t}\n\t\n\t// base grid layout styles, valid for every grid setup\n\t.@{spartan-namespace}row,\n\t.@{spartan-namespace}col {\n\t\tdisplay: block;\n\t\tmargin-right: 0 !important;\n\t\tpadding-right: 0 !important;\n\t}\n\n\t.@{spartan-namespace}row {\n\t\t.grid-cf();\n\t\tpadding-left: 0 !important;\n\n\t\t// used to .push and .pull columns\n\t\t&.@{spartan-namespace}reorder {\n\t\t\t.grid-row-reorder();\n\t\t}\n\t}\n\n\t.@{spartan-namespace}col {\n\t\t// make sure we have the correct box sizing for fixed gutter grid\n\t\t.grid-box-sizing();\n\t\tfloat: left;\n\t\tmargin-left: 0 !important;\n\n\t\t// spacer class for the rare occasion we have an \"empty\" column in a responsive grid layout\n\t\t// where the use of .offset is not possible because of realignment of columns\n\t\t&.@{spartan-namespace}spacer {\n\t\t\tmin-height: 1px;\n\t\t\tvisibility: hidden;\n\t\t}\n\t}\n}\n\n.grid-unlock(@config...) {\n\t.grid-gutter() {\n\t\t// base row and gutter styles must be set anew\n\t\t.@{spartan-namespace}row {\n\t\t\t.spartan-row-indent(0) !important;\n\t\t}\n\t\n\t\t.@{spartan-namespace}col {\n\t\t\t// one gutter indent for each column\n\t\t\t.spartan-col-indent(0) !important;\n\t\t\t// columns should per default span the whole width if none is set\n\t\t\t.grid-span(@spartan-grid-max-cols);\n\t\t}\n\t}\n\t\n\t@spartan-grid-fixed-width: extract(@config, 2);\n\t@spartan-grid-fixed-gutter: extract(@config, 3);\n\t@spartan-grid-max-cols: extract(@config, 5);\n\n\t@spartan-grid-type: extract(@config, 1);\n\t@spartan-grid-gutter-type: extract(@config, 4);\n\n\t@spartan-grid-precision: 4;\n\t\n\t// set up grid styles depending on an included config\n\t.spartan-grid();\n\t.grid-gutter();\n}\n\n.grid-generate() {\n\t// generate grid classes\n\n\t// Parameters:\n\t// 1) amount of iterations\n\t// 2) class selector prefix to generate\n\t// 3) mixin to apply to each selector\n\t//\n\t// Example:\n\t// .grid > .loop(12, class-prefix, 'mixin');\n\t//\n\t// NOTE: you can not use the generated classes themselves as mixins!\n\n\t.spartan-grid > .spartan-loop(@spartan-grid-max-cols, ~'@{spartan-namespace}span', 'grid-span');\n\t.spartan-grid > .spartan-loop(@spartan-grid-max-cols - 1, ~'@{spartan-namespace}offset', 'grid-offset');\n\t.spartan-grid > .spartan-loop(@spartan-grid-max-cols - 1, ~'@{spartan-namespace}push', 'grid-push');\n\t.spartan-grid > .spartan-loop(@spartan-grid-max-cols - 1, ~'@{spartan-namespace}pull', 'grid-pull');\n}\n\n.grid-bundle(@prefix: g-, @config...) {\n\t.grid-core(@prefix);\n\t.grid-unlock(@config);\n\t.grid-generate();\n}","// Dependencies:\n// - 00-variables.less\n// - lib/wireframe.less\n\nhtml {\n\t#type > #copy > .style('default'; @color-copy);\n\t#type > .rendering('antialiased');\n\t.visual-viewports(); // Remove for production\n\n\tpadding: 0 1em;\n\t@media @m-medium-up {\n\t\tpadding: 0 2em;\n\t}\n}\n\nbody {\n\t#layout > .content-boundaries(0, @max-content-width);\n\t#layout > .center();\n\tbackground: @color-bg-body;\n}\n\n// GRID\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n@grid-config: @grid-type, @max-content-width, @grid-gutter, @gutter-type, @grid-cols;\n\n.grid-bundle(@config: @grid-config);\n\n// TYPOGRAPHY\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n.title-page {\n\t#type > #title > .style('page'; inherit);\n}\n\n.title {\n\t#type > #title > .style('default'; inherit);\n}\n\n.copy {\n\t#type > #copy > .style('default'; inherit);\n}\n\n.small {\n\t#type > #copy > .style('small'; inherit);\n}\n\n// LINKS\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// Base link style is in typography file. Apply and define any variations and exceptions here...\na:link,\na:visited,\na:hover,\na:active {\n\t#type > #link > .style('default'; @color-link);\n}","// BASE TYPOGRAPHY\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// Dependencies:\n// - 00-variables.less\n\n#type {\n\t@font-family    : @font-default;\n\t@font-size      : @font-size-default;\n\t@line-height    : @line-height-default;\n\t@font-weight    : normal;\n\t@color          : @color-copy;\n\n\t// optimised text rendering\n\t.rendering(@_) {\n\t\t-moz-osx-font-smoothing: grayscale;\n\t\t-webkit-font-smoothing: antialiased;\n\t}\n\n\t#title {\n\t\t////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\t\t@font-family: @font-title;\n\t\t//@font-weight: bold;\n\t\t@color: gray;\n\t\t@line-height: 22px;\n\n\t\t// applies to all below //\n\t\t.style(@_, @color: @color) {\n\t\t\tcolor: @color;\n\t\t\tfont-family: @font-family;\n\t\t\tfont-weight: @font-weight !important; // (!important): Prevent faux bold / double-bold styling for webfonts\n\t\t\tfont-style: normal !important; // (!important): Prevent faux italic / double-italic styling for webfonts\n\t\t}\n\n\t\t.style('default'; ...) {\n\t\t\tfont-size: medium;\n\t\t\tline-height: @line-height;\n\n\t\t\t@media @m-medium-up {\n\t\t\t\tfont-size: large;\n\t\t\t}\n\t\t}\n\n\t\t.style('page'; ...) {\n\t\t\tfont-size: large;\n\t\t\tline-height: 26px; // old browsers\n\t\t\tline-height: 2rem;\n\n\t\t\t@media @m-medium-up {\n\t\t\t\tfont-size: x-large;\n\t\t\t}\n\t\t}\n\n\t}\n\n\t#copy {\n\t\t////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\t\t// applied to all below //\n\t\t.style(@_, @color: @color) {\n\t\t\tcolor: @color;\n\t\t\tfont-family: @font-family;\n\t\t\tfont-weight: @font-weight;\n\t\t}\n\n\t\t.style('default'; ...) {\n\t\t\tfont-size: @font-size;\n\t\t\tline-height: @line-height;\n\t\t}\n\n\t\t.style('small'; ...) {\n\t\t\tfont-size: x-small;\n\t\t\tline-height: @line-height;\n\t\t}\n\n\t}\n\n\t#link {\n\t\t////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\t\t// applies to all below //\n\t\t.style(@_, @color: @color) {\n\t\t\tcolor: @color;\n\t\t\ttext-decoration: none;\n\t\t}\n\n\t\t.style('default'; ...) {\n\t\t\t&:hover {\n\t\t\t\ttext-decoration: underline;\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n\nUsage:\n\tAs HTML class\n\t<h6 class=\"title-page\">Lorem</h6>\n\n\tIn style sheet\n\t.mod-example {\n\n\t\t// extend\n\t\t.header .title:extend(title-claim); // or\n\t\t.header .title { &.extend(.title-claim) };\n\n\t\t// mixin\n\t\t// default claim title\n\t\t.header .title { .title-claim() };\n\n\t\t// mixin\n\t\t// local variation: pink, normal weight\n\t\t#typo > #title > .style('page', pink);\n\t\t// override styles for exceptions in design\n\t\tfont-weight: normal; // blame the designer\n\t}\n\t\n**/","////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// ASSET PATHS\n\n// @static-base: is defined in Gruntfile.js and injected into Less\n@path-fonts         : '@{static-base}/fonts';\n@path-img           : '@{static-base}/img';\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// TYPOGRAPHY\n\n@font-default       : Helvetica, sans-serif;\n@font-title         : 'Open Sans Light', Helvetica, sans-serif;\n//@font-icons       : 'Icons';\n@font-monospace     : Consolas, Monaco, 'Andale Mono', monospace; // as on MDN\n\n@font-size-default  : 13px;\n@line-height-default: 15px;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// COLORS\n\n@color-bg-body      : #e4e4e4;\n@color-copy         : #444;\n@color-link         : teal;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// LAYOUT\n\n@max-content-width  : 940px;\n@grid-cols          : 12;\n@grid-gutter        : 20px;\n@grid-type          : 'fluid'; // 'fluid' or 'fixed'\n@gutter-type        : 'fixed'; // 'fluid' or 'fixed'\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// BREAKPOINTS and MEDIAQUERIES\n\n//// Content oriented queries\n\n@reading-length: 40em;\n\n@col-1-max: (@reading-length - .01);\n@col-2-min: @reading-length;\n@col-2-max: (@reading-length*2 - .01);\n@col-3-min: (@reading-length*2);\n\n@co-1-col: ~\"(max-width: @{col-1-max})\";\n@co-2-col: ~\"(min-width: @{col-2-min}) and (max-width: @{col-2-max})\";\n@co-3-col: ~\"(min-width: @{col-3-min})\";\n\n//// Media oriented queries\n\n// breakpoints\n@bp-1: 600px;\n@bp-1-down: (@bp-1 - 1);\n@bp-2: 900px;\n@bp-2-down: (@bp-2 - 1);\n\n// small ends at\n@m-small: ~\"(max-width: @{bp-1-down})\";\n\n// medium starts at\n@m-medium-up: ~\"(min-width: @{bp-1})\";\n\n// medium ends at\n@m-medium-down: ~\"(max-width: @{bp-2-down})\";\n\n// medium is between\n@m-medium: ~\"(min-width: @{bp-1}) and (max-width: @{bp-2-down})\";\n\n// large starts at\n@m-large: ~\"(min-width: @{bp-2})\";\n\n// Retina Resolution\n@px-ratio: 1.5;\n@default-dpi: 96;\n@hdpi: @default-dpi * @px-ratio;\n// https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Media_queries#-moz-device-pixel-ratio\n@m-retina: ~\"(-webkit-min-device-pixel-ratio: @{px-ratio}) /* Webkit-based browsers */, (min--moz-device-pixel-ratio: @{px-ratio}) /* Older Firefox browsers (prior to Firefox 16) */, (min-resolution: @{px-ratio}dppx) /* The standard way */, (min-resolution: @{hdpi}dpi) /* dppx fallback */\";\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// FOO","/**\n * module: example\n * creator:\n */\n.mod-example {\n\t.icon:before {\n\t\t// With sprites\n\t\t//.sprite();\n\t\t//.s-icon-paperclip();\n\t\tmargin-right: 1em;\n\t\tfloat: left;\n\n\t\t// Without sprites\n\t\tdisplay: inline-block;\n\t\tcontent: '';\n\t\twidth: 2em;\n\t\theight: 2em;\n\t\tbackground-image: url('@{path-img}/icon-paperclip.png');\n\t\tbackground-size: 2em 2em;\n\t}\n\tcode {\n\t\tpadding: .1em;\n\t\tbackground-color: #eeeeff;\n\t\tfont-style: italic;\n\t\tcolor: #666;\n\t\ttext-shadow: none;\n\t}\n\tp {\n\t\tmargin: .7em 0;\n\t\tline-height: 1.4em;\n\t\tcolor: #222;\n\t\ttext-shadow: 0.09em 0.07em 0.025em #fafafa;\n\t}\n\t.exmpl {\n\t\tmargin-left: 2em;\n\t}\n}\n/* END module: example */\n","/**\n * skin: skin-example-alternate, extends module: example\n * creator:\n */\n.skin-example-alternate {\n\t.wf-box {\n\t\toutline-color: hotpink;\n\t}\n}\n/* END skin: alternate, extends module: example */\n"]}