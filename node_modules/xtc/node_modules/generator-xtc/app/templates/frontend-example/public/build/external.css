[class^=s-],
[class*=' s-'] {
  display: inline-block;
}
/* glue: 0.9.4 hash: acd16f4e46 */
.s-icon-paperclip,
.s-icon-alarm,
.s-icon-lightbulb {
  background-image: url('/build/sprites.png');
  background-repeat: no-repeat;
  -webkit-background-size: 32px 38px;
  -moz-background-size: 32px 38px;
  background-size: 32px 38px;
}
@media screen and (-webkit-min-device-pixel-ratio: 1), screen and (min--moz-device-pixel-ratio: 1), screen and (-o-min-device-pixel-ratio: 100/100), screen and (min-device-pixel-ratio: 1), screen and (min-resolution: 1dppx) {
  .s-icon-paperclip,
  .s-icon-alarm,
  .s-icon-lightbulb {
    background-image: url('/build/sprites.png');
  }
}
@media screen and (-webkit-min-device-pixel-ratio: 2), screen and (min--moz-device-pixel-ratio: 2), screen and (-o-min-device-pixel-ratio: 200/100), screen and (min-device-pixel-ratio: 2), screen and (min-resolution: 2dppx) {
  .s-icon-paperclip,
  .s-icon-alarm,
  .s-icon-lightbulb {
    background-image: url('/build/sprites@2x.png');
  }
}
.s-icon-paperclip {
  background-position: 0 0;
  width: 20px;
  height: 19px;
}
.s-icon-alarm {
  background-position: 0 -19px;
  width: 20px;
  height: 20px;
}
.s-icon-lightbulb {
  background-position: -20px 0;
  width: 12px;
  height: 19px;
}
/**
 * "such.less" CSS boilerplate framework
 * helpers.less
 * https://github.com/MarcDiethelm/such.less
 * License: MIT
 * Copyright 2014 Marc Diethelm
 */
/**
 * CSS pseudo element triangle helper
 *
 * params .triangle(1, 2, 3, 4):
 * 1. Direction in which the triangle peak should face.
 * 2. Thickness of the triangle (e.g. half a diagonal line if you make a square out of two triangles).
 * 3. Triangle color, can be inherited from parent (default).
 * 4. Optional parameter to center the triangle on the given side relative to its parent.
 *    This needs the parent to have position: relative.
 *
 * usage example:
 *
 * .my-element {
 *      position: relative;
 *
 *      &:after {
 *          .triangle('down', 10px, red, 'centered');
 *      }
 * }
 **/
[hidden] {
  display: none;
}
/*
 * Hide only visually, but have it available for screenreaders: h5bp.com/v
 */
.vis-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  /*
 * Extends the .vis-hidden class to allow the element to be focusable
 * when navigated to via the keyboard: h5bp.com/p
 */
}
.vis-hidden.focusable:active,
.vis-hidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}
.text-hide {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
  text-rendering: auto;
}
/*
 * Hide from both screenreaders and browsers: h5bp.com/u
 */
.hidden {
  display: none !important;
  visibility: hidden;
}
.flex,
.flex img {
  max-width: 100%;
  width: auto;
  height: auto;
  image-rendering: optimizeQuality;
  -ms-interpolation-mode: bicubic;
}
a.img,
a.box {
  display: inline-block;
  text-decoration: none;
  cursor: pointer;
  line-height: 0;
}
.ellipsis {
  white-space: nowrap;
  overflow: hidden;
  -ms-text-overflow: ellipsis;
  -o-text-overflow: ellipsis;
  text-overflow: ellipsis;
}
/*
 * Clearfix: contain floats
 */
.cf {
  *zoom: 1;
}
.cf:before,
.cf:after {
  content: " ";
  display: table;
}
.cf:after {
  clear: both;
}
/*
 * For early scaffolding to let us know which viewport we're in.
 */
/* WIREFRAME STYLES */
.wf-row {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -ms-box-sizing: border-box;
  box-sizing: border-box;
  margin-bottom: 25px;
}
.wf-box,
.wf-box-dark,
.demo-grid .g-col > span {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -ms-box-sizing: border-box;
  box-sizing: border-box;
  display: block;
  outline: 1px dashed #999;
  background-color: #eaeaea;
  margin-bottom: 3px;
  padding: .5rem;
}
.wf-box .wf-box {
  background-color: #f8f8f8;
  outline: 1px dotted #fff;
}
.wf-box-dark {
  background-color: #444;
}
.wf-box-dark .wf-box-dark {
  background-color: #555;
}
.wf-text {
  /*	color: #ddd;
	letter-spacing: -.13em;
	word-spacing: -.2em;*/
}
.wf-label {
  padding: 0 2px 2px;
  font-weight: 200;
  font-size: 20px;
  line-height: 30px;
  font-family: "Helvetica Neue", "Open Sans Light", Helvetica, sans-serif;
  color: #777;
  background-color: #eeeeff;
}
.wf-label:before,
.wf-label:after {
  content: '';
  vertical-align: -0.5rem;
}
.xtc-error {
  outline: 1px solid #ff0000 !important;
}
@font-face {
  font-family: 'Open Sans Light';
  src: url('/fonts/OpenSans-Light-webfont.eot?wow');
  src: url('/fonts/OpenSans-Light-webfont.eot?wow#iefix') format('embedded-opentype'), /* IE6-IE8 */ url('/fonts/OpenSans-Light-webfont.woff?wow') format('woff'), /* Modern Browsers */ url('/fonts/OpenSans-Light-webfont.ttf?wow') format('truetype'), /* Safari, Android, iOS */ url('/fonts/OpenSans-Light-webfont.svg?wow#open_sanslight') format('svg');
  font-weight: normal;
  font-style: normal;
  
  /* IE9 Compat Modes */
  /* Legacy iOS */
}
/**

Usage:
	As HTML class
	<h6 class="title-page">Lorem</h6>

	In style sheet
	.mod-example {

		// extend
		.header .title:extend(title-claim); // or
		.header .title { &.extend(.title-claim) };

		// mixin
		// default claim title
		.header .title { .title-claim() };

		// mixin
		// local variation: pink, normal weight
		#typo > #title > .style('page', pink);
		// override styles for exceptions in design
		font-weight: normal; // blame the designer
	}
	
**/
/**
 * You can use the following mixins to easily set up responsive layouts.
 * For grid layouts with non-equal span sizes use incrementing col-[integer] classes and apply sizes to each of these classes:
 *
 * .grid-col-set([column name], [column span width]):
 * Standard mixin to set up a column in a responsive layout
 *
 * To set up layouts with equal width columns you only specify the width in `.grid-col-set-equal`.
 *
 * .grid-col-set-equal([column span width]):
 * Extended mixin to set up equal width columns and properly clear them at the same time
 *
 * Note: Every use of .grid-col-set-equal() must be wrapped in a media query (even for smallest "mobile first" viewport).
 *       Because else the `nth-child` selectors used in ` .grid-col-set-equal()` for proper clearing would be passed on to all
 *       other viewports/media queries in the layout.
 *
 * .grid-col-clear([columns per line]):
 * Use this to manually clear every nth column if columns differ in height.
 * This ensures that a grid layout can have only [columns per line] columns on one horizontal grid line.
 *
 **/
.layout-r-1 {
  /**
	* specs: max cols 12
	* desktop: 4
	* tablet: 6
	* phone: 12
	**/
}
@media (max-width: 599px) {
  .layout-r-1 > .g-row > .g-col,
  .layout-r-1 > .g-col {
    width: 100%;
  }
  .layout-r-1 > .g-row > .g-col:nth-child( 1n + 1),
  .layout-r-1 > .g-col:nth-child( 1n + 1) {
    clear: left;
  }
}
@media (min-width: 600px) and (max-width: 899px) {
  .layout-r-1 > .g-row > .g-col,
  .layout-r-1 > .g-col {
    width: 50%;
  }
  .layout-r-1 > .g-row > .g-col:nth-child( 2n + 1),
  .layout-r-1 > .g-col:nth-child( 2n + 1) {
    clear: left;
  }
}
@media (min-width: 900px) {
  .layout-r-1 > .g-row > .g-col,
  .layout-r-1 > .g-col {
    width: 33.3333%;
  }
  .layout-r-1 > .g-row > .g-col:nth-child( 3n + 1),
  .layout-r-1 > .g-col:nth-child( 3n + 1) {
    clear: left;
  }
}
.layout-r-2 {
  /**
	* specs: max cols 12
	* desktop: 6
	* tablet: 12
	* phone: 12
	**/
}
@media (max-width: 899px) {
  .layout-r-2 > .g-row > .g-col,
  .layout-r-2 > .g-col {
    width: 100%;
  }
  .layout-r-2 > .g-row > .g-col:nth-child( 1n + 1),
  .layout-r-2 > .g-col:nth-child( 1n + 1) {
    clear: left;
  }
}
@media (min-width: 900px) {
  .layout-r-2 > .g-row > .g-col,
  .layout-r-2 > .g-col {
    width: 50%;
  }
  .layout-r-2 > .g-row > .g-col:nth-child( 2n + 1),
  .layout-r-2 > .g-col:nth-child( 2n + 1) {
    clear: left;
  }
}
.layout-r-3 {
  /**
	* specs:
	* desktop: 8/4
	* tablet: 8/4
	* phone: 12
	**/
}
@media (max-width: 599px) {
  .layout-r-3 > .g-row > .g-col,
  .layout-r-3 > .g-col {
    width: 100%;
  }
  .layout-r-3 > .g-row > .g-col:nth-child( 1n + 1),
  .layout-r-3 > .g-col:nth-child( 1n + 1) {
    clear: left;
  }
}
@media (min-width: 600px) {
  .layout-r-3 > .g-row > .g-col-1,
  .layout-r-3 > .g-col-1 {
    width: 66.6667%;
  }
  .layout-r-3 > .g-row > .g-col-2,
  .layout-r-3 > .g-col-2 {
    width: 33.3333%;
  }
}
.layout-r-4 {
  /**
	* specs:
	* desktop: 3
	* tablet: 6
	* phone: 12
	**/
}
@media (max-width: 599px) {
  .layout-r-4 > .g-row > .g-col,
  .layout-r-4 > .g-col {
    width: 100%;
  }
  .layout-r-4 > .g-row > .g-col:nth-child( 1n + 1),
  .layout-r-4 > .g-col:nth-child( 1n + 1) {
    clear: left;
  }
}
@media (min-width: 600px) and (max-width: 899px) {
  .layout-r-4 > .g-row > .g-col,
  .layout-r-4 > .g-col {
    width: 50%;
  }
  .layout-r-4 > .g-row > .g-col:nth-child( 2n + 1),
  .layout-r-4 > .g-col:nth-child( 2n + 1) {
    clear: left;
  }
}
@media (min-width: 900px) {
  .layout-r-4 > .g-row > .g-col,
  .layout-r-4 > .g-col {
    width: 25%;
  }
  .layout-r-4 > .g-row > .g-col:nth-child( 4n + 1),
  .layout-r-4 > .g-col:nth-child( 4n + 1) {
    clear: left;
  }
}
.layout-nogrid-1 {
  /**
	* specs:
	* desktop: 7
	* tablet: 5
	* phone: 5
	**/
}
@media (max-width: 899px) {
  .layout-nogrid-1 > .g-row > .g-col,
  .layout-nogrid-1 > .g-col {
    width: 20%;
  }
}
@media (min-width: 900px) {
  .layout-nogrid-1 > .g-row > .g-col,
  .layout-nogrid-1 > .g-col {
    width: 14.2857%;
  }
}
html {
  color: #444444;
  font-family: Helvetica, sans-serif;
  font-weight: normal;
  font-size: 13px;
  line-height: 15px;
  -moz-osx-font-smoothing: grayscale;
  -webkit-font-smoothing: antialiased;
  padding: 0 1em;
}
html:before,
html:after {
  position: fixed;
  padding: 5px;
  opacity: .5;
  font-weight: normal;
  font-size: x-large;
  right: 15px;
  z-index: 999;
  pointer-events: none;
}
html:before {
  top: 45px;
  background-color: hotpink;
  border: 1px solid mediumvioletred;
}
html:after {
  top: 80px;
  background-color: turquoise;
  border: 1px solid teal;
}
@media (max-width: 599px) {
  html:before {
    content: 'small';
  }
}
@media (min-width: 600px) {
  html:before {
    content: 'medium';
  }
}
@media (min-width: 900px) {
  html:before {
    content: 'large';
  }
}
@media (max-width: 39.99em) {
  html:after {
    content: '1 col';
  }
}
@media (min-width: 40em) and (max-width: 79.99em) {
  html:after {
    content: '2 cols';
  }
}
@media (min-width: 80em) {
  html:after {
    content: '3 cols';
  }
}
@media (min-width: 600px) {
  html {
    padding: 0 2em;
  }
}
body {
  min-width: 0;
  max-width: 940px;
  display: block;
  margin-left: auto;
  margin-right: auto;
  background: #e4e4e4;
}
.g-row,
.g-col {
  display: block;
  margin-right: 0 !important;
  padding-right: 0 !important;
}
.g-row {
  padding-left: 0 !important;
}
.g-row:before,
.g-row:after {
  content: " ";
  display: table;
}
.g-row:after {
  clear: both;
}
.g-row.g-reorder > .g-col {
  position: relative;
}
.g-col {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  float: left;
  margin-left: 0 !important;
}
.g-col.g-spacer {
  min-height: 1px;
  visibility: hidden;
}
.g-row {
  margin-left: -20px !important;
}
.g-col {
  padding-left: 20px !important;
  width: 100%;
}
.g-span-12 {
  width: 100%;
}
.g-span-11 {
  width: 91.6667%;
}
.g-span-10 {
  width: 83.3333%;
}
.g-span-9 {
  width: 75%;
}
.g-span-8 {
  width: 66.6667%;
}
.g-span-7 {
  width: 58.3333%;
}
.g-span-6 {
  width: 50%;
}
.g-span-5 {
  width: 41.6667%;
}
.g-span-4 {
  width: 33.3333%;
}
.g-span-3 {
  width: 25%;
}
.g-span-2 {
  width: 16.6667%;
}
.g-span-1 {
  width: 8.3333%;
}
.g-offset-11 {
  margin-left: 91.6667% !important;
}
.g-offset-10 {
  margin-left: 83.3333% !important;
}
.g-offset-9 {
  margin-left: 75% !important;
}
.g-offset-8 {
  margin-left: 66.6667% !important;
}
.g-offset-7 {
  margin-left: 58.3333% !important;
}
.g-offset-6 {
  margin-left: 50% !important;
}
.g-offset-5 {
  margin-left: 41.6667% !important;
}
.g-offset-4 {
  margin-left: 33.3333% !important;
}
.g-offset-3 {
  margin-left: 25% !important;
}
.g-offset-2 {
  margin-left: 16.6667% !important;
}
.g-offset-1 {
  margin-left: 8.3333% !important;
}
.g-push-11 {
  left: 91.6667%;
}
.g-push-10 {
  left: 83.3333%;
}
.g-push-9 {
  left: 75%;
}
.g-push-8 {
  left: 66.6667%;
}
.g-push-7 {
  left: 58.3333%;
}
.g-push-6 {
  left: 50%;
}
.g-push-5 {
  left: 41.6667%;
}
.g-push-4 {
  left: 33.3333%;
}
.g-push-3 {
  left: 25%;
}
.g-push-2 {
  left: 16.6667%;
}
.g-push-1 {
  left: 8.3333%;
}
.g-pull-11 {
  right: 91.6667%;
}
.g-pull-10 {
  right: 83.3333%;
}
.g-pull-9 {
  right: 75%;
}
.g-pull-8 {
  right: 66.6667%;
}
.g-pull-7 {
  right: 58.3333%;
}
.g-pull-6 {
  right: 50%;
}
.g-pull-5 {
  right: 41.6667%;
}
.g-pull-4 {
  right: 33.3333%;
}
.g-pull-3 {
  right: 25%;
}
.g-pull-2 {
  right: 16.6667%;
}
.g-pull-1 {
  right: 8.3333%;
}
.title-page {
  color: inherit;
  font-family: 'Open Sans Light', Helvetica, sans-serif;
  font-weight: normal !important;
  font-style: normal !important;
  font-size: large;
  line-height: 26px;
  line-height: 2rem;
}
@media (min-width: 600px) {
  .title-page {
    font-size: x-large;
  }
}
.title {
  color: inherit;
  font-family: 'Open Sans Light', Helvetica, sans-serif;
  font-weight: normal !important;
  font-style: normal !important;
  font-size: medium;
  line-height: 22px;
}
@media (min-width: 600px) {
  .title {
    font-size: large;
  }
}
.copy {
  color: inherit;
  font-family: Helvetica, sans-serif;
  font-weight: normal;
  font-size: 13px;
  line-height: 15px;
}
.small {
  color: inherit;
  font-family: Helvetica, sans-serif;
  font-weight: normal;
  font-size: x-small;
  line-height: 15px;
}
a:link,
a:visited,
a:hover,
a:active {
  color: #008080;
  text-decoration: none;
}
a:link:hover,
a:visited:hover,
a:hover:hover,
a:active:hover {
  text-decoration: underline;
}
.demo-grid .title {
  margin-top: 2em;
  padding-top: .5em;
  display: block;
  border-top: 1px solid #c3c3c3;
}
.demo-grid th {
  text-align: left;
  padding-right: 3.5em;
  vertical-align: top;
}
.demo-grid th,
.demo-grid td {
  padding-top: .175em;
  padding-bottom: .175em;
  border-bottom: 1px dotted #aaaaaa;
}
.demo-grid td {
  font-weight: bold;
}
.demo-grid th,
.demo-grid ._reset {
  font-weight: normal;
}
.demo-grid .g-col {
  margin-bottom: 1em;
}
.demo-grid .g-col > span {
  display: block;
  overflow: hidden;
}
.demo-grid ._type:after {
  content: 'fluid';
}
.demo-grid ._max-width:after {
  content: '940px';
}
.demo-grid ._gutter-width:after {
  content: '20px';
}
.demo-grid ._gutter-type:after {
  content: 'fixed';
}
.demo-grid ._gutter-width-percent:after {
  content: '2.0833%';
}
.demo-grid hr {
  border: none;
  border-bottom: 1px solid #c3c3c3;
}
/**
 * module: example
 * creator:
 */
.mod-example .icon:before {
  margin-right: 1em;
  float: left;
  display: inline-block;
  content: '';
  width: 2em;
  height: 2em;
  background-image: url('/img/icon-paperclip.png');
  background-size: 2em 2em;
}
.mod-example code {
  padding: .1em;
  background-color: #eeeeff;
  font-style: italic;
  color: #666;
  text-shadow: none;
}
.mod-example p {
  margin: .7em 0;
  line-height: 1.4em;
  color: #222;
  text-shadow: 0.09em 0.07em 0.025em #fafafa;
}
.mod-example .exmpl {
  margin-left: 2em;
}
/* END module: example */
/**
 * skin: skin-example-alternate, extends module: example
 * creator:
 */
.skin-example-alternate .wf-box {
  outline-color: hotpink;
}
/* END skin: alternate, extends module: example */
/*# sourceMappingURL=external.css.map */